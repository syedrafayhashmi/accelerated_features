{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":8923522,"sourceType":"datasetVersion","datasetId":5367415}],"dockerImageVersionId":30733,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!rm -rf accelerated_features\n!rm -rf kaggle","metadata":{"execution":{"iopub.status.busy":"2024-07-10T16:26:20.534559Z","iopub.execute_input":"2024-07-10T16:26:20.534952Z","iopub.status.idle":"2024-07-10T16:26:22.832959Z","shell.execute_reply.started":"2024-07-10T16:26:20.534918Z","shell.execute_reply":"2024-07-10T16:26:22.831599Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"!git clone https://github.com/syedrafayhashmi/accelerated_features.git\n","metadata":{"execution":{"iopub.status.busy":"2024-07-10T16:26:34.976912Z","iopub.execute_input":"2024-07-10T16:26:34.978026Z","iopub.status.idle":"2024-07-10T16:26:36.868952Z","shell.execute_reply.started":"2024-07-10T16:26:34.977984Z","shell.execute_reply":"2024-07-10T16:26:36.867854Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Cloning into 'accelerated_features'...\nremote: Enumerating objects: 105, done.\u001b[K\nremote: Counting objects: 100% (105/105), done.\u001b[K\nremote: Compressing objects: 100% (72/72), done.\u001b[K\nremote: Total 105 (delta 50), reused 87 (delta 32), pack-reused 0\u001b[K\nReceiving objects: 100% (105/105), 14.86 MiB | 37.29 MiB/s, done.\nResolving deltas: 100% (50/50), done.\n","output_type":"stream"}]},{"cell_type":"code","source":"!python /kaggle/working/accelerated_features/xfeat_mvimg_1.py\n","metadata":{"execution":{"iopub.status.busy":"2024-07-10T16:26:42.818349Z","iopub.execute_input":"2024-07-10T16:26:42.818772Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stdout","text":"loading weights from: /kaggle/working/accelerated_features/modules/../weights/xfeat.pt\nQuery index:  0\nEach query image takes:  79.86458969116211\nkaggle/working/output/mvimagenet_1k/top_1/3c0040d7_012.jpg\nQuery index:  1\nEach query image takes:  82.95058631896973\nkaggle/working/output/mvimagenet_1k/top_1/1c00c404_012.jpg\nQuery index:  2\nEach query image takes:  53.003037452697754\nkaggle/working/output/mvimagenet_1k/top_1/000128ac_012.jpg\nQuery index:  3\nEach query image takes:  81.80223178863525\nkaggle/working/output/mvimagenet_1k/top_1/1b002c66_012.jpg\nQuery index:  4\nEach query image takes:  51.419676303863525\nkaggle/working/output/mvimagenet_1k/top_1/1d016cb0_012.jpg\nQuery index:  5\nEach query image takes:  75.14157438278198\nkaggle/working/output/mvimagenet_1k/top_1/1b0003c1_012.jpg\nQuery index:  6\nEach query image takes:  82.4130711555481\nkaggle/working/output/mvimagenet_1k/top_1/4000c8f1_012.jpg\nQuery index:  7\nEach query image takes:  81.41202664375305\nkaggle/working/output/mvimagenet_1k/top_1/400073f0_012.jpg\nQuery index:  8\nEach query image takes:  81.17156791687012\nkaggle/working/output/mvimagenet_1k/top_1/140033e6_012.jpg\nQuery index:  9\nEach query image takes:  79.34608030319214\nkaggle/working/output/mvimagenet_1k/top_1/1c0143c8_012.jpg\nQuery index:  10\nEach query image takes:  81.3787350654602\nkaggle/working/output/mvimagenet_1k/top_1/320155be_012.jpg\nQuery index:  11\nEach query image takes:  81.43326425552368\nkaggle/working/output/mvimagenet_1k/top_1/40002935_012.jpg\nQuery index:  12\nEach query image takes:  47.95848321914673\nkaggle/working/output/mvimagenet_1k/top_1/17008371_012.jpg\nQuery index:  13\nEach query image takes:  83.0257318019867\nkaggle/working/output/mvimagenet_1k/top_1/4100e97c_012.jpg\nQuery index:  14\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}